# node.py file

class Node():
    def __init__(self, data, next = None):
        self.data = data
        self.next = next

# stackM.py file

from node import Node

class StackM():
    def __init__(self):
        self.head = None
        self.tail = None
        
    def isEmpty(self):
        if self.head == None:
            return True
        return False
    
    def push(self, new_data):
        new_node = Node(new_data)
        
        if self.isEmpty():
            self.head = new_node
            self.tail = new_node
        else:
            new_node.next = self.head
            self.head = new_node
            
    def print(self):
        if self.isEmpty():
            print("Empty stack.")
        else:
            temp = self.head
            while temp:
                print(temp.data + " ",end = "")
                temp = temp.next
            print()
            
    def pop(self):
        if self.isEmpty():
            print("Empty stack.")
        else:
            self.head = None
            
# main.py file

from stackM import StackM

def menu():
    option = -1
    while option < 0 or option > 4:
        print("\n1 - Insert a new node in the stack.\n" +
              "2 - Print the stack\n" +
              "3 - Delete a node from stack.\n" +
              "4 - Clear all stack.\n"+ 
              "0 - Exit.\n")
        
        option = int(input("Enter your option: "))
        if option < 0 or option > 4:
            print("\tInvalid option! Enter again.")
            
    return option

def main():
    print("### Stack's test ###\n")
    
    choice = 100
    
    myStack = StackM()
    
    while choice != 0:
        choice = menu()
        
        if choice == 0:
            print("Closing...\n")
            break
            
        elif choice == 1:
            myStack.push(input("Enter an item:"))
        
        elif choice == 2:
            myStack.print()
            
        elif choice == 3:
            myStack.pop()
            
        else:
            myStack.clear()
            
main() 
