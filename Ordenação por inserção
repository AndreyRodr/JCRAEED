# Funcionamento
  - As comparações iniciam a partir do segundo número do vetor de tamanho n
    - Números à esquerda do número escolhido, estão sempre ordenados
  - Um laço com as comparações será executado do segundo ao último elemento
  - Condições para executar o laço:
    - Enquanto existirem elementos à esquerda do número eleito para comparações
    - A posição que atende a ordenação que se busca não for encontrada
  - O número eleito está na posição i e os números à esquerda estão na posição i-1 a 0

def swap(list, i, j):
    """ Swaps the items in positions i and j."""
    # Equvalent to list[i], list[j] = list[j], list[i], but the following code shows what is actually happening
    temp = list[i]
    list[i] = list[j]
    list[j] = temp

def insertionSort(list):
    i = 1
    while i < len(list):
        itemToInsert < list[i]
        j = i - 1
        while j >= 0:
            if itemToInsert < list[j]:
                list[j + 1] = list[j]
                j -= 1
            else:
                break
        list[j + 1] = itemToInsert
        i += 1

numbers = [5,3,1,8,2]
print(numbers)
insertionSort(numbers)
print(numbers)
